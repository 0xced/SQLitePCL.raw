
bridge fields readonly?

consider remove .ptr and chg the marshal
signatures to accept stmt/sqlite3, so we get
AddRef/Release, but we also get control over
the "constructor".

consider:  chg inclusion of assemblies in
nuspec such that it errors if the expected
assemblies are not there?  currently, if the
nuspec files are generated when the mt dir
is not built, there are no errors, and pack
will build empty packages.

in setup, check the current OS somehow so
that some checks (like LoadLibrary on non-Windows)
can be skipped.

default load, so the setup call can be optional
in many or most cases

maybe the Setup calls should return the sqlite
version et al?

should try_dlopen and friends just return the
IGetFunctionPointer?

AssemblyInfo stuff, version numbers

chg release notes in nuspec to reference a URL

what are the empty dep groups for?

maybe don't do bundle_winsqlite3?  it's kind of
silly.  it doesn't actually bundle anything.  it
just calls (something like) Setup.Load_winsqlite3().

what is batteries_v2.sqlite3 for?

maybe batteries now are per-bundle.  one
function that figures out at runtime what
to load.  for green, it would need to check
to see if it's on iOS.

will bundle_green have a problem because
lib.e_sqlite3 is all one package?  so now
the e_sqlite3 build for iOS is included,
and we just have to have to require it not
to be used?

not sure we need bundle_green at all.

chg cb build scripts to use VS 2017

later: rename sqlcipher in cb to e_sqlcipher

test on uwp

restore those win32 set directory calls somewhere

preload from arch directory stuff.  subdirectory
by cpu arch.

--

missing test for sqlite3_exec with a hook.
it would probably crash, since the implementation
doesn't gc protect the delegate?  or is this one
a special case because the delegate only lives
as long as the call?

deal with stdcall/winsqlite3 in Setup

need to setup some x86 stdcall builds for testing?
or just use winsqlite3 itself.  irritating that 
the test suite passes using winsqlite3 and either 
calling convention.  why?

DI for the utf8 stuff?  #202

more xunit test cases

goal is to have no ifdefs in core

chgs to intptr dispose?  #166  SafeHandle

chg to SourceGear name?

instead of delegate-ish types in raw.cs should the functions
take something like Func<whatever> ?

can the hook_info classes be simplified?



missing test for sqlite3_exec with a hook.
it would probably crash, since the implementation
doesn't gc protect the delegate?  or is this one
a special case because the delegate only lives
as long as the call?

deal with stdcall/winsqlite3 in Setup

need to setup some x86 stdcall builds for testing?
or just use winsqlite3 itself.  irritating that 
the test suite passes using winsqlite3 and either 
calling convention.  why?

DI for the utf8 stuff

debug vs release builds?

default load, so the setup call can be optional
in many or most cases

more xunit test cases

restore those win32 set directory calls somewhere

goal is to have no ifdefs in core

chgs to intptr dispose?

version of gen_build which only does the nugets
for packaging e_sqlite and sqlcipher builds

chg to SourceGear name?

stuff in csproj so we can do dotnet pack

AssemblyInfo stuff, version numbers

instead of delegate-ish types in raw.cs should the functions
take something like Func<whatever> ?

can the hook_info classes be simplified?

lots of duplication in sqlite3_pinvoke with the new code.
DllImport meant that sqlite3_close (for example) shows up
in only one place in NativeMethods.  with the new code,
we need a delegate type, and a field to hold one of them,
and a line to load it.



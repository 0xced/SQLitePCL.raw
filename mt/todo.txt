
mv code into the project directories under mt.
what about calling convention cdecl vs stcall ?

dlopen on Mac

default load, so the setup call can be optional
in many or most cases

rename SQLite3Provider_dyn.  what to call it?
what distinguishes this layer from the one
above and below?

places where the delegate has byte[] vs IntPtr

strong names in new csproj

stdcall.  which matters only for x86.  x64 and
ARM ignore this and use cdecl.

do we need a separate build for calling convention?
or just build both stdcall and cdecl versions
and have them both?

more xunit test cases

how to do __internal for iOS?  just pass null to dlopen?

get rid of those win32 set directory calls.

try to have no ifdefs in core

chgs to intptr dispose?

version of gen_build which only does the nugets
for packaging e_sqlite and sqlcipher builds

SourceGear name?

UnmanagedFunctionPointer attribute CharSet ?

stuff in csproj so we can do dotnet pack

AssemblyInfo stuff, version numbers

instead of delegate-ish types in isqlite3.cs should the functions
take something like Func<whatever> ?

